{"version":3,"file":"static/js/600.6ae5f872.chunk.js","mappings":"qLAAA,IAAMA,EAAW,CACb,CAAEC,GAAI,MAAOC,KAAM,YACnB,CAAED,GAAI,MAAOC,KAAM,YACnB,CAAED,GAAI,MAAOC,KAAM,YACnB,CAAED,GAAI,MAAOC,KAAM,cACnB,CAAED,GAAI,MAAOC,KAAM,cACnB,CAAED,GAAI,MAAOC,KAAM,cACnB,CAAED,GAAI,MAAOC,KAAM,cACnB,CAAED,GAAI,MAAOC,KAAM,WACnB,CAAED,GAAI,MAAOC,KAAM,WACnB,CAAED,GAAI,MAAOC,KAAM,YAGRC,EAAc,WACzB,OAAOH,CACT,EAEaI,EAAiB,SAACC,GAC7B,OAAOL,EAASM,MAAK,SAACC,GAAO,OAAKA,EAAQN,KAAOI,CAAS,GAC5D,C,uHCjBWG,EAAYC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6FAMtBC,EAAcH,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,yGASxBG,EAAcL,EAAAA,GAAAA,GAASM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,qF,0BCIpC,EAjBoB,SAAHK,GAAsB,IAAhBhB,EAAQgB,EAARhB,SACjBiB,GAAWC,EAAAA,EAAAA,MAEf,OACEC,EAAAA,EAAAA,KAACX,EAAS,CAAAY,SACPpB,EAASqB,KAAI,SAAAd,GAAO,OACnBY,EAAAA,EAAAA,KAACP,EAAW,CAAAQ,UACVE,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,GAAE,GAAAC,OAAKlB,EAAQN,IAAMyB,MAAO,CAACC,KAAMV,GAAUG,SAAA,EACjDD,EAAAA,EAAAA,KAAA,OAAKS,IAAI,sCAAsCC,IAAI,MACnDV,EAAAA,EAAAA,KAACL,EAAW,CAAAM,SAAEb,EAAQL,WAHRK,EAAQN,GAKZ,KAItB,E,SChBa6B,EAAUrB,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,wIAQpBoB,EAAQtB,EAAAA,GAAAA,MAAYI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,iFAMpBqB,GAAOvB,EAAAA,EAAAA,IAAOwB,EAAAA,IAAPxB,CAAgBM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,iFCfvBuB,EAAY,SAAHlB,GAA6B,IAAvBmB,EAAKnB,EAALmB,MAAOC,EAAQpB,EAARoB,SAC/B,OACEd,EAAAA,EAAAA,MAACQ,EAAO,CAAAV,SAAA,EACND,EAAAA,EAAAA,KAACa,EAAI,KACLb,EAAAA,EAAAA,KAACY,EAAK,CACJM,KAAK,OACLF,MAAOA,EACPC,SAAU,SAACE,GAAC,OAAKF,EAASE,EAAEC,OAAOJ,MAAM,MAIjD,E,SCgBF,EAvBiB,WAAO,IAADK,EACfxC,GAAWG,EAAAA,EAAAA,KACjBsC,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAlDI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GAC9BI,EAAsC,QAA3BP,EAAGK,EAAaG,IAAI,eAAO,IAAAR,EAAAA,EAAI,GAE1CS,EAAkBjD,EAASkD,QAAO,SAAA3C,GAAO,OAC7CA,EAAQL,KAAKiD,cAAcC,SAASL,EAAYI,cAAc,IAQhE,OACE7B,EAAAA,EAAAA,MAAA,QAAAF,SAAA,EAEED,EAAAA,EAAAA,KAACe,EAAS,CAACC,MAAOY,EAAaX,SART,SAAAlC,GAExB4C,EAD4B,KAAT5C,EAAc,CAAEA,KAAAA,GAAS,CAAC,EAE/C,KAMIiB,EAAAA,EAAAA,KAACkC,EAAW,CAACrD,SAAUiD,MAG7B,C","sources":["fakeAPI.js","components/ProductList/ProductList.styled.js","components/ProductList/ProductList.jsx","components/SearchBox/SearchBox.styled.js","components/SearchBox/SearchBox.jsx","pages/Products.jsx"],"sourcesContent":["const products = [\n    { id: \"h-1\", name: \"Hoodie 1\" },\n    { id: \"h-2\", name: \"Hoodie 2\" },\n    { id: \"h-3\", name: \"Hoodie 3\" },\n    { id: \"s-1\", name: \"Sneakers 1\" },\n    { id: \"s-2\", name: \"Sneakers 2\" },\n    { id: \"s-3\", name: \"Sneakers 3\" },\n    { id: \"s-4\", name: \"Sneakers 4\" },\n    { id: \"p-1\", name: \"Pants 1\" },\n    { id: \"p-2\", name: \"Pants 2\" },\n    { id: \"p-3\", name: \"Pants 3\" }\n  ];\n\n  export const getProducts = () => {\n    return products;\n  };\n\n  export const getProductById = (productId) => {\n    return products.find((product) => product.id === productId);\n  };\n  ","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, 200px);\n  gap: 16px;\n`;\n\nexport const CardWrapper = styled.div`\n  border: 1px solid black;\n  border-radius: 4px;\n\n  > a {\n    text-decoration: none;\n  }\n`;\n\nexport const ProductName = styled.h3`\n  padding: 4px;\n  margin-top: 8px;\n  margin-bottom: 0;\n  color: black;\n`;\n","import React from 'react';\nimport { CardWrapper, Container, ProductName, } from './ProductList.styled';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst ProductList = ({ products }) => {\nconst location = useLocation();\n\n  return (\n    <Container>\n      {products.map(product => (\n        <CardWrapper key={product.id}>\n          <Link to={`${product.id}`} state={{from: location}}>\n            <img src=\"https://via.placeholder.com/200x100\" alt=\"\" />\n            <ProductName>{product.name}</ProductName>\n          </Link>\n        </CardWrapper>\n      ))}\n    </Container>\n  );\n};\n\nexport default ProductList;\n","import styled from \"styled-components\";\nimport { HiSearch } from \"react-icons/hi\";\n\nexport const Wrapper = styled.div`\n  display: inline-flex;\n  align-items: center;\n  position: relative;\n  margin-bottom: 16px;\n  text-transform: uppercase;\n`;\n\nexport const Input = styled.input`\n  padding: 8px 32px 8px 8px;\n  border-radius: 4px;\n  font: inherit;\n`;\n\nexport const Icon = styled(HiSearch)`\n  width: 20px;\n  height: 20px;\n  position: absolute;\n  right: 6px;\n`;\n","import { Icon, Input, Wrapper } from \"./SearchBox.styled\";\n\nexport const SearchBox = ({ value, onChange }) => {\n    return (\n      <Wrapper>\n        <Icon />\n        <Input\n          type=\"text\"\n          value={value}\n          onChange={(e) => onChange(e.target.value)}\n        />\n      </Wrapper>\n    );\n  };","import ProductList from 'components/ProductList/ProductList';\nimport { SearchBox } from 'components/SearchBox/SearchBox';\nimport { getProducts } from 'fakeAPI';\nimport React from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nconst Products = () => {\n  const products = getProducts();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const productName = searchParams.get('name') ?? '';\n\n  const visibleProducts = products.filter(product =>\n    product.name.toLowerCase().includes(productName.toLowerCase())\n  );\n\n  const updateQueryString = name => {\n    const nextParams = name !== '' ? { name } : {};\n    setSearchParams(nextParams);\n  };\n\n  return (\n    <main>\n      {/* <ProductList products={products} /> */}\n      <SearchBox value={productName} onChange={updateQueryString} />\n      <ProductList products={visibleProducts} />\n    </main>\n  );\n};\n\nexport default Products;\n"],"names":["products","id","name","getProducts","getProductById","productId","find","product","Container","styled","_templateObject","_taggedTemplateLiteral","CardWrapper","_templateObject2","ProductName","_templateObject3","_ref","location","useLocation","_jsx","children","map","_jsxs","Link","to","concat","state","from","src","alt","Wrapper","Input","Icon","HiSearch","SearchBox","value","onChange","type","e","target","_searchParams$get","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","productName","get","visibleProducts","filter","toLowerCase","includes","ProductList"],"sourceRoot":""}